# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: 

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: 
  pages: 
  id-token: 

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: 
    steps:
      - name: 
        uses: 
      - name: 
        uses: # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: # runs 'bundle install' and caches installed gems automatically
          cache-version: # Increment this number if you need to re-download cached gems
      - name: 
        id: 
        uses: 
      - name: 
        # Outputs to the './_site' directory by default
        run: "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: 
      - name: 
        # Automatically uploads an artifact from the './_site' directory by default
        uses: 

  # Deployment job
  deploy:
    environment:
      name: 
      url: {{}}
    runs-on: 
    needs: 
    steps:
      - name: 
        id: 
        uses: 
